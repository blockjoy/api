name: Deploy DEV DO

on:
  push:
    branches: [main,cd/k8s]

jobs:
  build:
    name: Build, push, and deploy
    runs-on: self-hosted
    steps:
      - name: Checkout main
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t registry.digitalocean.com/stakejoy/blockvisor-api:latest -t registry.digitalocean.com/stakejoy/blockvisor-api:$(echo $GITHUB_SHA | head -c7) .

      - name: Build migrations container image
        run: docker build -t registry.digitalocean.com/stakejoy/blockvisor-api-migrations:latest -t registry.digitalocean.com/stakejoy/blockvisor-api-migrations:$(echo $GITHUB_SHA | head -c7) .
        working-directory: ./migrations

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200

      - name: Push image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/stakejoy/blockvisor-api:latest && docker push registry.digitalocean.com/stakejoy/blockvisor-api:$(echo $GITHUB_SHA | head -c7)

      - name: Push migrations image to DigitalOcean Container Registry
        run: docker push registry.digitalocean.com/stakejoy/blockvisor-api-migrations:latest && docker push registry.digitalocean.com/stakejoy/blockvisor-api-migrations:$(echo $GITHUB_SHA | head -c7)

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|registry.digitalocean.com/stakejoy/blockvisor-api:'${TAG}'|' $GITHUB_WORKSPACE/deploy/deployment.yml
      
      - name: Install Kubectl 
        uses: azure/setup-kubectl@v3
        id: install

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ethos

      - name: Create Namespace
        run: |
          kubectl create namespace blockvisor --dry-run=true -o yaml | kubectl apply -f -
          kubectl config set-context --current --namespace=blockvisor
    
      - name: Pull Secrets
        run: |
          kubectl create secret generic db --from-literal=DATABASE_URL=${{ secrets.DATABASE_URL }} --dry-run=true -o yaml | kubectl apply -f -
          kubectl create secret generic jwt --from-literal=JWT_SECRET=${{ secrets.JWT_SECRET }} --dry-run=true -o yaml | kubectl apply -f -
          kubectl create secret generic api --from-literal=API_SERVICE_SECRET=${{ secrets.API_SERVICE_SECRET }} --dry-run=true -o yaml | kubectl apply -f -

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deploy/deployment.yml

      - name: Verify Envoy deployment
        run: kubectl rollout status deployment/envoy
     
      - name: Verify bv-api deployment
        run: kubectl rollout status deployment/bv-api
