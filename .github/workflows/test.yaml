name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SQLX_OFFLINE: true

jobs:
  test:
    name: Tests
    runs-on: 
      group: Docker
      labels: docker
    env:
      CONFIG_FILE: "${{ github.workspace }}/blockvisor-api/config.toml"
    services:
      postgres:
        image: postgres:13-bookworm
        env:
          POSTGRES_DB: blockvisor_db
          POSTGRES_USER: blockvisor
          POSTGRES_PASSWORD: password
        ports:
          - 25432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      mqtt:
        image: emqx/emqx-enterprise:5.3.0
        ports:
          - 21883:1883
        volumes:
          - ${{ github.workspace }}/docker/emqx:/opt/emqx/etc

      vault:
        image: hashicorp/vault:1.17
        ports:
          - 28200:8200
        env:
          SKIP_SETCAP: true
          VAULT_ADDR: "http://0.0.0.0:8200"
          VAULT_DEV_ROOT_TOKEN_ID: "vault-root-token"

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install libpq
        run: apt update && apt install libpq-dev -y

      - name: Initialize vault
        run: >
          curl
          --request POST
          --header "X-Vault-Token: vault-root-token"
          --data '{"type":"kv","options":{"version":"2"}}'
          http://localhost:28200/v1/sys/mounts/blockjoy

      - name: Cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast

  lints:
    name: Lints
    runs-on:  
      group: Docker
      labels: docker

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
          override: true

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

      - name: Catch common mistakes
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests -- -D warnings -Drust-2018-idioms
