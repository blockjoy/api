name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SQLX_OFFLINE: true

jobs:
  test:
    name: Tests
    runs-on: self-hosted
    services:
      postgres:
        image: postgres:12
        env:
          POSTRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: stakejoy
        ports:
          # Port expected by integration tests
          - 10891:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:10891/stakejoy
      DATABASE_URL_NAKED: postgres://postgres:postgres@localhost:10891
      TOKEN_EXPIRATION_MINS: 10
      PWD_RESET_EXPIRATION_MINS: 5
      REGISTRATION_CONFIRMATION_MINS: 30
      INVITATION_MINS: 10080
      REFRESH_EXPIRATION_USER_MINS: 1200
      REFRESH_EXPIRATION_HOST_MINS: 43200
      JWT_SECRET: 1245456
      REFRESH_SECRET: 23942390
      REQUEST_CONCURRENCY_LIMIT: 128
      PAGINATION_MAX_ITEMS: 10
      UI_BASE_URL: https://localhost:3000
      # Cookbook secret token
      COOKBOOK_TOKEN: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzUxMiJ9.eyJpZCI6ImE2MDdkOTM2LTYyMjgtNGYxMC04MGM1LTk0M2M0MjFiZWQxOSIsImV4cCI6MTcwNDgwNzY3NywidG9rZW5fdHlwZSI6Imhvc3RfYXV0aCIsInJvbGUiOiJzZXJ2aWNlIn0.5sJB8qilPQ4-F44mCS2WsXElBGfBZFrMJ491Sxmmu1BTj--0N6rlIEnTUwoiJdUXOP08CiBTkStFRtUTFyEpGg
      COOKBOOK_URL: https://babel.dev.blockjoy.com/
      MQTT_CLIENT_ID: 1
      MQTT_SERVER_ADDRESS: 35.237.162.218
      MQTT_SERVER_PORT: 1883
      MQTT_USERNAME: blockvisor-api
      MQTT_PASSWORD: PH*rE:\ZQlecB9/I?[#R$q3M;5yCb]Y+
      KEY_SERVICE_URL: https://api.dev.blockjoy.com
      # Cloudflare
      CF_BASE_URL: https://api.cloudflare.com/client/v4
      CF_ZONE: 89560cdd783e35f7a9d718755ea9c656
      CF_DNS_BASE: n0des.xyz
      CF_TTL: 300
      # secret
      CF_TOKEN: 9QjEiXC4B26tgshHZjuZ57kJcjaChSSsDfzUvfYQ

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Install libpq
        run: apt update && apt install libpq-dev -y
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --no-fail-fast
  lints:
    name: Lints
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy, rustfmt
          override: true
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
      - name: Catch common mistakes
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --tests -- -D warnings
