syntax = "proto3";

package v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// User representation
message User {
  string id = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

/* UI configuration */
message UserConfigurationParameter {
  string name = 1;
  string value = 2;
}

/* User related services */
service UserService {
  /* Retrieve a single user */
  rpc Get(GetUserRequest) returns (GetUserResponse);
  /* Create a single user */
  rpc Create(CreateUserRequest) returns (CreateUserResponse);
  /* Update a single user. */
  rpc Update(UpdateUserRequest) returns (UpdateUserResponse);
  /* Delete a single user. */
  rpc Delete(DeleteUserRequest) returns (google.protobuf.Empty);
  /* Create/update configuration parameters */
  rpc UpsertConfiguration(UpsertConfigurationRequest)
    returns (UpsertConfigurationResponse);
  /* Retrieve all configuration parameters */
  rpc GetConfiguration(GetConfigurationRequest)
    returns (GetConfigurationResponse);
}

message GetUserRequest {
  RequestMeta meta = 1;
}

message GetUserResponse {
  ResponseMeta meta = 1;
  User user = 2;
}

message CreateUserRequest {
  RequestMeta meta = 1;
  string email = 2;
  string first_name = 3;
  string last_name = 4;
  string password = 5;
  string password_confirmation = 6;
}

message CreateUserResponse {
  ResponseMeta meta = 1;
}

message UpdateUserRequest {
  RequestMeta meta = 1;
  string id = 2;
  optional string first_name = 3;
  optional string last_name = 4;
}

message UpdateUserResponse {
  ResponseMeta meta = 1;
  User user = 2;
}

message UpsertConfigurationRequest {
  RequestMeta meta = 1;
  repeated UserConfigurationParameter params = 3;
}

message UpsertConfigurationResponse {
  ResponseMeta meta = 1;
}

message GetConfigurationRequest {
  RequestMeta meta = 1;
}

message GetConfigurationResponse {
  ResponseMeta meta = 1;
  repeated UserConfigurationParameter params = 2;
}

/* Users can only delete themselves, so no need for any further params */
message DeleteUserRequest {
  RequestMeta meta = 1;
}
